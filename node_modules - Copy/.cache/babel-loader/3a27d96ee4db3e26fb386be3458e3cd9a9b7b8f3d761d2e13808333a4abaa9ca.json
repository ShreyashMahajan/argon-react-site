{"ast":null,"code":"import _regeneratorRuntime from \"C:/Shreyash/Projects/Coupon site/argon-dashboard-react-master/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Shreyash/Projects/Coupon site/argon-dashboard-react-master/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/Shreyash/Projects/Coupon site/argon-dashboard-react-master/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\Shreyash\\\\Projects\\\\Coupon site\\\\argon-dashboard-react-master\\\\src\\\\components\\\\QrUploader\\\\qrCodeUploader.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\n\n// import \"./App.css\";\n\nimport { scanFile } from \"@openhealthnz-credentials/pdf-image-qr-scanner\";\nimport ImageUploader from \"./qrUploader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QrCodeUploader() {\n  _s();\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    resultText = _useState2[0],\n    setResultText = _useState2[1];\n  function processFile(_x) {\n    return _processFile.apply(this, arguments);\n  }\n  function _processFile() {\n    _processFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(selectedFile) {\n      var qrCode;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            setResultText(\"\");\n            try {\n              // const qrCode = await scanFile(selectedFile);\n              // It returns null if no QR code is found\n              qrCode = 'ffdff';\n              setResultText(qrCode || \"No QR code found\");\n            } catch (e) {\n              // Example Error Handling\n              if ((e === null || e === void 0 ? void 0 : e.name) === \"InvalidPDFException\") {\n                setResultText(\"Invalid PDF\");\n              } else if (e instanceof Event) {\n                setResultText(\"Invalid Image\");\n              } else {\n                console.log(e);\n                setResultText(\"Unknown error\");\n              }\n            }\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _processFile.apply(this, arguments);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: \"React File QR Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ImageUploader, {\n      onFileSelectError: function onFileSelectError(err) {\n        console.log(err);\n        setResultText(err.error);\n      },\n      onFileSelectSuccess: function onFileSelectSuccess(file) {\n        processFile(file);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        height: \"40vh\",\n        width: \"50vw\",\n        fontSize: \"0.8rem\",\n        overflowWrap: \"anywhere\",\n        overflow: \"auto\",\n        border: \"white solid 1px\"\n      },\n      children: resultText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n}\n_s(QrCodeUploader, \"/O+HnjM+a4LylUkQTPFQC/XRP30=\");\n_c = QrCodeUploader;\nexport default QrCodeUploader;\nvar _c;\n$RefreshReg$(_c, \"QrCodeUploader\");","map":{"version":3,"names":["React","useRef","useState","scanFile","ImageUploader","jsxDEV","_jsxDEV","QrCodeUploader","_s","_useState","_useState2","_slicedToArray","resultText","setResultText","processFile","_x","_processFile","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","selectedFile","qrCode","wrap","_callee$","_context","prev","next","e","name","Event","console","log","stop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFileSelectError","err","error","onFileSelectSuccess","file","style","height","width","fontSize","overflowWrap","overflow","border","_c","$RefreshReg$"],"sources":["C:/Shreyash/Projects/Coupon site/argon-dashboard-react-master/src/components/QrUploader/qrCodeUploader.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\n\r\n// import \"./App.css\";\r\n\r\nimport { scanFile } from \"@openhealthnz-credentials/pdf-image-qr-scanner\";\r\nimport ImageUploader from \"./qrUploader\";\r\n\r\nfunction QrCodeUploader() {\r\n\tconst [resultText, setResultText] = useState(\"\");\r\n\r\n\tasync function processFile(selectedFile) {\r\n\t\tsetResultText(\"\");\r\n\t\ttry {\r\n\t\t\t// const qrCode = await scanFile(selectedFile);\r\n\t\t\t// It returns null if no QR code is found\r\n          const  qrCode = 'ffdff'\r\n\t\t\tsetResultText(qrCode || \"No QR code found\");\r\n\t\t} catch (e) {\r\n\t\t\t// Example Error Handling\r\n\t\t\tif (e?.name === \"InvalidPDFException\") {\r\n\t\t\t\tsetResultText(\"Invalid PDF\");\r\n\t\t\t} else if (e instanceof Event) {\r\n\t\t\t\tsetResultText(\"Invalid Image\");\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t\tsetResultText(\"Unknown error\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<header className=\"App-header\">React File QR Scanner</header>\r\n\t\t\t<ImageUploader\r\n\t\t\t\tonFileSelectError={(err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\tsetResultText(err.error);\r\n\t\t\t\t}}\r\n\t\t\t\tonFileSelectSuccess={(file) => {\r\n\t\t\t\t\tprocessFile(file);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<span\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\theight: \"40vh\",\r\n\t\t\t\t\twidth: \"50vw\",\r\n\t\t\t\t\tfontSize: \"0.8rem\",\r\n\t\t\t\t\toverflowWrap: \"anywhere\",\r\n\t\t\t\t\toverflow: \"auto\",\r\n\t\t\t\t\tborder: \"white solid 1px\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{resultText}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default QrCodeUploader;"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;;AAE/C;;AAEA,SAASC,QAAQ,QAAQ,gDAAgD;AACzE,OAAOC,aAAa,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACzB,IAAAC,SAAA,GAAoCP,QAAQ,CAAC,EAAE,CAAC;IAAAQ,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAAiB,SAElCI,WAAWA,CAAAC,EAAA;IAAA,OAAAC,YAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,aAAA;IAAAA,YAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAA1B,SAAAC,QAA2BC,YAAY;MAAA,IAAAC,MAAA;MAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YACtChB,aAAa,CAAC,EAAE,CAAC;YACjB,IAAI;cACH;cACA;cACcW,MAAM,GAAG,OAAO;cAC9BX,aAAa,CAACW,MAAM,IAAI,kBAAkB,CAAC;YAC5C,CAAC,CAAC,OAAOM,CAAC,EAAE;cACX;cACA,IAAI,CAAAA,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEC,IAAI,MAAK,qBAAqB,EAAE;gBACtClB,aAAa,CAAC,aAAa,CAAC;cAC7B,CAAC,MAAM,IAAIiB,CAAC,YAAYE,KAAK,EAAE;gBAC9BnB,aAAa,CAAC,eAAe,CAAC;cAC/B,CAAC,MAAM;gBACNoB,OAAO,CAACC,GAAG,CAACJ,CAAC,CAAC;gBACdjB,aAAa,CAAC,eAAe,CAAC;cAC/B;YACD;UAAC;UAAA;YAAA,OAAAc,QAAA,CAAAQ,IAAA;QAAA;MAAA,GAAAb,OAAA;IAAA,CACD;IAAA,OAAAN,YAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAED,oBACCZ,OAAA;IAAK8B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACnB/B,OAAA;MAAQ8B,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7DnC,OAAA,CAACF,aAAa;MACbsC,iBAAiB,EAAE,SAAAA,kBAACC,GAAG,EAAK;QAC3BV,OAAO,CAACC,GAAG,CAACS,GAAG,CAAC;QAChB9B,aAAa,CAAC8B,GAAG,CAACC,KAAK,CAAC;MACzB,CAAE;MACFC,mBAAmB,EAAE,SAAAA,oBAACC,IAAI,EAAK;QAC9BhC,WAAW,CAACgC,IAAI,CAAC;MAClB;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACFnC,OAAA;MACCyC,KAAK,EAAE;QACNC,MAAM,EAAE,MAAM;QACdC,KAAK,EAAE,MAAM;QACbC,QAAQ,EAAE,QAAQ;QAClBC,YAAY,EAAE,UAAU;QACxBC,QAAQ,EAAE,MAAM;QAChBC,MAAM,EAAE;MACT,CAAE;MAAAhB,QAAA,EAEDzB;IAAU;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAER;AAACjC,EAAA,CAjDQD,cAAc;AAAA+C,EAAA,GAAd/C,cAAc;AAmDvB,eAAeA,cAAc;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}