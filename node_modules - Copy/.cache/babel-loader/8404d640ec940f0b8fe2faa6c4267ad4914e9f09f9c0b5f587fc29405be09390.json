{"ast":null,"code":"import _regeneratorRuntime from \"C:/Shreyash/Projects/Coupon site/argon-dashboard-react-master/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Shreyash/Projects/Coupon site/argon-dashboard-react-master/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/Shreyash/Projects/Coupon site/argon-dashboard-react-master/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\Shreyash\\\\Projects\\\\Coupon site\\\\argon-dashboard-react-master\\\\src\\\\components\\\\QrUploader\\\\qrCodeUploader.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\n\n// import \"./App.css\";\n\nimport { scanFile } from \"@openhealthnz-credentials/pdf-image-qr-scanner\";\nimport ImageUploader from \"./qrUploader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction QrCodeUploader() {\n  _s();\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    resultText = _useState2[0],\n    setResultText = _useState2[1];\n  console.log('resultText', resultText);\n  function processFile(_x) {\n    return _processFile.apply(this, arguments);\n  }\n  function _processFile() {\n    _processFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(selectedFile) {\n      var qrCode;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            setResultText(\"\");\n            _context.prev = 1;\n            _context.next = 4;\n            return scanFile(selectedFile);\n          case 4:\n            qrCode = _context.sent;\n            // It returns null if no QR code is found\n            setResultText(qrCode || \"No QR code found\");\n            _context.next = 11;\n            break;\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            // Example Error Handling\n            if ((_context.t0 === null || _context.t0 === void 0 ? void 0 : _context.t0.name) === \"InvalidPDFException\") {\n              setResultText(\"Invalid PDF\");\n            } else if (_context.t0 instanceof Event) {\n              setResultText(\"Invalid Image\");\n            } else {\n              console.log(_context.t0);\n              setResultText(\"Unknown error\");\n            }\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n    return _processFile.apply(this, arguments);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ImageUploader, {\n      onFileSelectError: function onFileSelectError(err) {\n        console.log(err);\n        setResultText(err.error);\n      },\n      onFileSelectSuccess: function onFileSelectSuccess(file) {\n        processFile(file);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Dummy text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s(QrCodeUploader, \"/O+HnjM+a4LylUkQTPFQC/XRP30=\");\n_c = QrCodeUploader;\nexport default QrCodeUploader;\nvar _c;\n$RefreshReg$(_c, \"QrCodeUploader\");","map":{"version":3,"names":["React","useRef","useState","scanFile","ImageUploader","jsxDEV","_jsxDEV","Fragment","_Fragment","QrCodeUploader","_s","_useState","_useState2","_slicedToArray","resultText","setResultText","console","log","processFile","_x","_processFile","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","selectedFile","qrCode","wrap","_callee$","_context","prev","next","sent","t0","name","Event","stop","children","onFileSelectError","err","error","onFileSelectSuccess","file","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Shreyash/Projects/Coupon site/argon-dashboard-react-master/src/components/QrUploader/qrCodeUploader.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\n\r\n// import \"./App.css\";\r\n\r\nimport { scanFile } from \"@openhealthnz-credentials/pdf-image-qr-scanner\";\r\nimport ImageUploader from \"./qrUploader\";\r\n\r\nfunction QrCodeUploader() {\r\n\tconst [resultText, setResultText] = useState(\"\");\r\n\tconsole.log('resultText',resultText)\r\n\r\n\tasync function processFile(selectedFile) {\r\n\t\tsetResultText(\"\");\r\n\t\ttry {\r\n\t\t\tconst qrCode = await scanFile(selectedFile);\r\n\t\t\t// It returns null if no QR code is found\r\n\t\t\tsetResultText(qrCode || \"No QR code found\");\r\n\t\t} catch (e) {\r\n\t\t\t// Example Error Handling\r\n\t\t\tif (e?.name === \"InvalidPDFException\") {\r\n\t\t\t\tsetResultText(\"Invalid PDF\");\r\n\t\t\t} else if (e instanceof Event) {\r\n\t\t\t\tsetResultText(\"Invalid Image\");\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t\tsetResultText(\"Unknown error\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ImageUploader\r\n\t\t\t\tonFileSelectError={(err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\tsetResultText(err.error);\r\n\t\t\t\t}}\r\n\t\t\t\tonFileSelectSuccess={(file) => {\r\n\t\t\t\t\tprocessFile(file);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<p>Dummy text</p>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default QrCodeUploader;"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;;AAE/C;;AAEA,SAASC,QAAQ,QAAQ,gDAAgD;AACzE,OAAOC,aAAa,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzC,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACzB,IAAAC,SAAA,GAAoCT,QAAQ,CAAC,EAAE,CAAC;IAAAU,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAChCI,OAAO,CAACC,GAAG,CAAC,YAAY,EAACH,UAAU,CAAC;EAAA,SAErBI,WAAWA,CAAAC,EAAA;IAAA,OAAAC,YAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,aAAA;IAAAA,YAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAA1B,SAAAC,QAA2BC,YAAY;MAAA,IAAAC,MAAA;MAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YACtClB,aAAa,CAAC,EAAE,CAAC;YAACgB,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAE,IAAA;YAAA,OAEI9B,QAAQ,CAACwB,YAAY,CAAC;UAAA;YAArCC,MAAM,GAAAG,QAAA,CAAAG,IAAA;YACZ;YACAnB,aAAa,CAACa,MAAM,IAAI,kBAAkB,CAAC;YAACG,QAAA,CAAAE,IAAA;YAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAI,EAAA,GAAAJ,QAAA;YAE5C;YACA,IAAI,CAAAA,QAAA,CAAAI,EAAA,aAAAJ,QAAA,CAAAI,EAAA,uBAAAJ,QAAA,CAAAI,EAAA,CAAGC,IAAI,MAAK,qBAAqB,EAAE;cACtCrB,aAAa,CAAC,aAAa,CAAC;YAC7B,CAAC,MAAM,IAAIgB,QAAA,CAAAI,EAAA,YAAaE,KAAK,EAAE;cAC9BtB,aAAa,CAAC,eAAe,CAAC;YAC/B,CAAC,MAAM;cACNC,OAAO,CAACC,GAAG,CAAAc,QAAA,CAAAI,EAAE,CAAC;cACdpB,aAAa,CAAC,eAAe,CAAC;YAC/B;UAAC;UAAA;YAAA,OAAAgB,QAAA,CAAAO,IAAA;QAAA;MAAA,GAAAZ,OAAA;IAAA,CAEF;IAAA,OAAAN,YAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAED,oBACChB,OAAA,CAAAE,SAAA;IAAA+B,QAAA,gBACCjC,OAAA,CAACF,aAAa;MACboC,iBAAiB,EAAE,SAAAA,kBAACC,GAAG,EAAK;QAC3BzB,OAAO,CAACC,GAAG,CAACwB,GAAG,CAAC;QAChB1B,aAAa,CAAC0B,GAAG,CAACC,KAAK,CAAC;MACzB,CAAE;MACFC,mBAAmB,EAAE,SAAAA,oBAACC,IAAI,EAAK;QAC9B1B,WAAW,CAAC0B,IAAI,CAAC;MAClB;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACF1C,OAAA;MAAAiC,QAAA,EAAG;IAAU;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA,eAChB,CAAC;AAEL;AAACtC,EAAA,CArCQD,cAAc;AAAAwC,EAAA,GAAdxC,cAAc;AAuCvB,eAAeA,cAAc;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}